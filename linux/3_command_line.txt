"Graphical user interfaces make easy tasks easier, whil command line interfaces make difficult tasks possible"

Structure of command:
Command -options arguments
ls -a /home/angela

Commands:
Shutdown and Reboot system
    shutdown -h     // Halts the operating system completely
    shutdown -r     // Reboot
-----------------------------------------
Locating applications
    which firefox
    whereis firefox
-----------------------------------------
Accessing directories
    echo $home  // Shows home dir
    pwd     // Displaying current dir
    cd ~    // Change to home dir
    cd ..   // Change To parent dir
    cd -    // Change to previous dir
    pushd path  // Change to dir and push it to dir stack
    popd    // removes last dir from stack and go to previous, has different flags
----------------------------------------
Exploring the Filesystem
    tree address    // Shows tree of adress dir
    cd /    // Go to root dir
    ls      // List content ow current work dir
    ls -a   // Shows All files including hidden
----------------------------------------
Hard Links
    touch file1     // Creating file
    ln file1 file2  // Create hard link
    ls -li file1 file2  // Shows this 2 files with access permissions and unique number in 1 column that shows thay it is 1 file
Soft (Symbolic) Links
    ln -s file1 file3   // Creates soft link
    ls -li file1 file3  // Check that these files have differents id 
----------------------------------------
Working with files
    wc filename.txt     // shows info about lines, words, bytes etc. Have options
    cat filename.txt    // Shows what inside document
    cat -n filename.txt    // added numbers to lines
    less filename.txt   // opens file and shows 1 screen at time, we can use space for navigate forward
    less -N filename    // added numbers to lines
    head filename.txt   // Shows first 10 lines, can use flags like -20 for showing 20 etc.
    tail filename.txt   // Shows last 10 lines, can use flags like -20 for showing 20 etc.
    tac filename.txt    // Shows content of file backwards

    echo > filename     // Creates a file
    touch filename      // Creates a file
    mv filename new-filename    // Renames file
    rm filename     // Deletes file
    rm -i filename  // Asks before removing
    mkdir dirname   // Creates directory, can create multiple in one line
    rmdir dirname   // Removes directory
    rm -rf dirname  // Removes even directory is not empty

    locate example  // finds all filenames with this sample
    find . -name "regexp"   // find in current dir by name or regexp
    find . -name "regexp" -ls  // find in current dir by name or regexp and give extrainfo
    find -name ".swp" -exec rm {} ';'   // Find and removes all files with .swp 
    find . -type d      // Find all directories in current dir
    find . -maxdepth 1 -type d  // Find onli dirs without subdirs
    find . -type f -exec grep -H return {} \;   // find all files and then shows only where we have "return" in content or name
    find . -type f -exec ls -l {} \; find and shows all dirs
    find . -type f -ls  // same as above
    sudo find . -size 0  // find all files with size 0
    sudo find . -size 0 -ls  // same as above + more info
    sudo find -newer apport.log  // find all newer than apport.log

Package Management Systems
    Low level: dpkg, rpm
    High Level: apt-get, zypper, yum







